const express = require('express');
const router = express.Router();
const User = require('../models/user');
const Article = require('../models/article')
const Comment = require('../models/comments')

/*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
----------------------------------------update Profile-------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/

router.post('/editAdmin', (req, res, next) => {

    const { lastName, firstName, gender, phone } = req.body;

    User.updateOne({ _id: req.user.id }, { $set: { firstName, lastName, phone, lastUpdate: Date.now(), gender } })
        .then((result) => res.json({ success: true, result }))
        .catch((err) => console.log(err))
});

////////////////////////////////////////////////////////updateUsers
router.post('/editProfile', (req, res, next) => {

    const { lastName, firstName, gender, phone } = req.body;

    User.updateOne({ userName: req.body.userName }, { $set: { firstName, lastName, phone, lastUpdate: Date.now(), gender } })
        .then((result) => res.json({ success: true, result }))
        .catch((err) => console.log(err))
});

/////////////////////////////////////////////////////////Recovery Password
router.post('/recoveryPass', (req, res, next) => {
    const { userName } = req.body;
    User.findOne({ userName }, { phone: 1 }, (err, userPhone) => {

        if (err) return res.json({ success: false, err })

        User.updateOne({ userName }, { $set: { password: userPhone.phone } })
            .then((result) => res.json({ success: true, result }))
            .catch((err) => res.json({ err }))

    });
});

/////////////////////////////////////////////////////////Recovery Password
router.delete('/deleteUser', (req, res, next) => {

    const { userName } = req.body;
    User.findOne({ userName }, async (err, result) => {

        if (err) return res.json({ success: false, err })

        const articleUser = await Article.find({ userName })
        const commentsUser = await Comment.find({ userId: result._id })

        if (articleUser) {
            await Article.delete({ userName })
        } else if (commentsUser) {
            await Comment.delete({ userId: result._id })
        }


    });

});

/*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
---------------------------------------- ARTICLE TASK -------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/

////////////////////////////////////////////////////////REMOVE ARTICLE////////////////////////////////////////////////////////

router.delete('/deleteArticleUser', async (req, res, next) => {

    const { _id } = req.body;

    Article.deleteOne({ _id })
        .then(res.json({ success: true, msg: 'Article deleted...' }))
        .catch((err) => res.json({ success: false, msg: 'Article Not deleted...', err }))


});

/*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
---------------------------------------- USERS -------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/

router.get('/getAllUser', (req, res, next) => {
    User.find({ role: 'user' }, (err, users) => {
        if (err) return res.json({ success: false, msg: 'error', err });
        return res.send(users);
    });
});






module.exports = router;